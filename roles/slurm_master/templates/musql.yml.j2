#!/bin/bash
#
# Slurm MySQL Database Backup Script
# Generated by Ansible
#

set -euo pipefail

# Configuration
BACKUP_DIR="{{ backup_location }}"
DATABASE="{{ database_name }}"
USER="{{ database_user }}"
PASSWORD="{{ database_password }}"
HOST="{{ database_host }}"
RETENTION_DAYS="{{ backup_retention_days }}"

# Create backup directory
mkdir -p "$BACKUP_DIR"

# Generate backup filename with timestamp
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_FILE="$BACKUP_DIR/slurm_db_backup_$TIMESTAMP.sql.gz"

# Log function
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$BACKUP_DIR/backup.log"
}

log "Starting Slurm database backup..."

# Create database backup
if mysqldump \
    --user="$USER" \
    --password="$PASSWORD" \
    --host="$HOST" \
    --single-transaction \
    --routines \
    --triggers \
    --lock-tables=false \
    --events \
    --ignore-table=mysql.event \
    --verbose \
    "$DATABASE" | gzip > "$BACKUP_FILE"; then
    
    log "✅ Backup completed successfully: $BACKUP_FILE"
    
    # Check backup file size
    BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
    log "📦 Backup size: $BACKUP_SIZE"
    
else
    log "❌ Backup failed!"
    exit 1
fi

# Remove old backups
log "🧹 Cleaning up old backups (older than $RETENTION_DAYS days)..."
find "$BACKUP_DIR" -name "slurm_db_backup_*.sql.gz" -mtime +"$RETENTION_DAYS" -delete

# Count remaining backups
BACKUP_COUNT=$(find "$BACKUP_DIR" -name "slurm_db_backup_*.sql.gz" | wc -l)
log "📁 Total backups remaining: $BACKUP_COUNT"

# Test backup integrity
log "🔍 Testing backup integrity..."
if zcat "$BACKUP_FILE" | head -20 | grep -q "MySQL dump"; then
    log "✅ Backup integrity check passed"
else
    log "❌ Backup integrity check failed!"
    exit 1
fi

log "🎉 Backup process completed successfully"

# Optional: Send notification (uncomment if needed)
# echo "Slurm database backup completed on $(hostname)" | mail -s "Slurm Backup Report" admin@example.com