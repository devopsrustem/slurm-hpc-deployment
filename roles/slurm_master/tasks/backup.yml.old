---
# =============================================================================
# РЕЗЕРВНОЕ КОПИРОВАНИЕ SLURM КЛАСТЕРА
# =============================================================================

- name: "Создание директорий для резервного копирования"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0750"
  loop:
    - "{{ slurm_backup_dir | default('/var/backups/slurm') }}"
    - "{{ slurm_backup_dir | default('/var/backups/slurm') }}/config"
    - "{{ slurm_backup_dir | default('/var/backups/slurm') }}/database"
    - "{{ slurm_backup_dir | default('/var/backups/slurm') }}/state"
  tags: [backup, directories]

- name: "Создание основных скриптов резервного копирования"
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0755"
  loop:
    - dest: "{{ slurm_install_prefix }}/bin/backup-slurm-config"
      content: |
        #!/bin/bash
        # Backup Slurm configuration
        BACKUP_DIR="${1:-{{ slurm_backup_dir | default('/var/backups/slurm') }}/config}"
        DATE=$(date +%Y%m%d_%H%M%S)
        mkdir -p "$BACKUP_DIR"
        tar -czf "$BACKUP_DIR/config-$DATE.tar.gz" \
            -C {{ slurm_config_dir }} .
        echo "Config backup: $BACKUP_DIR/config-$DATE.tar.gz"
        
    - dest: "{{ slurm_install_prefix }}/bin/backup-slurm-database"
      content: |
        #!/bin/bash
        # Backup Slurm database
        BACKUP_DIR="${1:-{{ slurm_backup_dir | default('/var/backups/slurm') }}/database}"
        DATE=$(date +%Y%m%d_%H%M%S)
        mkdir -p "$BACKUP_DIR"
        {% if slurm_enable_slurmdbd | default(true) %}
        mysqldump {{ slurm_db_name }} > "$BACKUP_DIR/slurmdbd-$DATE.sql"
        gzip "$BACKUP_DIR/slurmdbd-$DATE.sql"
        echo "Database backup: $BACKUP_DIR/slurmdbd-$DATE.sql.gz"
        {% else %}
        echo "Database backup not enabled"
        {% endif %}
  tags: [backup, scripts]

- name: "Создание основного скрипта резервного копирования"
  copy:
    content: |
      #!/bin/bash
      # Main Slurm backup script
      
      set -euo pipefail
      
      BACKUP_DIR="{{ slurm_backup_dir | default('/var/backups/slurm') }}"
      DATE=$(date +%Y%m%d_%H%M%S)
      LOG_FILE="${BACKUP_DIR}/backup-${DATE}.log"
      
      log() {
          echo "[$(date '+%Y-%m-%d %H:%M:%S')] $*" | tee -a "${LOG_FILE}"
      }
      
      log "Starting Slurm backup process"
      
      BACKUP_SUBDIR="${BACKUP_DIR}/${DATE}"
      mkdir -p "${BACKUP_SUBDIR}"
      
      log "Backing up configuration files..."
      {{ slurm_install_prefix }}/bin/backup-slurm-config \
          "${BACKUP_SUBDIR}/config"
      
      {% if slurm_enable_slurmdbd | default(true) %}
      log "Backing up database..."
      {{ slurm_install_prefix }}/bin/backup-slurm-database \
          "${BACKUP_SUBDIR}/database"
      {% endif %}
      
      log "Creating compressed archive..."
      cd "${BACKUP_DIR}"
      tar -czf "slurm-backup-${DATE}.tar.gz" "${DATE}/"
      rm -rf "${DATE}/"
      
      BACKUP_SIZE=$(du -h "slurm-backup-${DATE}.tar.gz" | cut -f1)
      log "Backup completed: slurm-backup-${DATE}.tar.gz (${BACKUP_SIZE})"
    dest: "{{ slurm_install_prefix }}/bin/backup-slurm-full"
    owner: root
    group: root
    mode: "0755"
  tags: [backup, scripts, main]

- name: "Настройка автоматического резервного копирования"
  cron:
    name: "Slurm {{ item.name }} backup"
    minute: "{{ item.minute | default('*') }}"
    hour: "{{ item.hour | default('*') }}"
    day: "{{ item.day | default('*') }}"
    month: "{{ item.month | default('*') }}"
    weekday: "{{ item.weekday | default('*') }}"
    user: root
    job: "{{ item.job }}"
    state: "{{ 'present' if slurm_enable_backup | default(true) else 'absent' }}"
  loop:
    - name: "configuration"
      hour: "2"
      minute: "0"
      job: "{{ slurm_install_prefix }}/bin/backup-slurm-config"
    - name: "database"
      hour: "2"
      minute: "30"
      weekday: "0"
      job: "{{ slurm_install_prefix }}/bin/backup-slurm-database"
    - name: "full system"
      hour: "3"
      minute: "0"
      weekday: "0"
      job: "{{ slurm_install_prefix }}/bin/backup-slurm-full"
  when: item.name != "database" or slurm_enable_slurmdbd | default(true)
  tags: [backup, cron, automation]

- name: "Создание скрипта проверки резервных копий"
  copy:
    content: |
      #!/bin/bash
      # Slurm backup verification script
      
      BACKUP_DIR="{{ slurm_backup_dir | default('/var/backups/slurm') }}"
      
      echo "=== Slurm Backup Status ==="
      echo "Backup directory: $BACKUP_DIR"
      echo ""
      
      if [[ ! -d "$BACKUP_DIR" ]]; then
          echo "ERROR: Backup directory does not exist!"
          exit 1
      fi
      
      echo "Recent backups:"
      find "$BACKUP_DIR" -name "slurm-backup-*.tar.gz" \
          -type f -mtime -7 -exec ls -lh {} \; | sort -k9
      echo ""
      
      echo "Backup status check completed."
    dest: "{{ slurm_install_prefix }}/bin/check-slurm-backups"
    owner: root
    group: root
    mode: "0755"
  tags: [backup, scripts, verification]

- name: "Первоначальное резервное копирование"
  command: "{{ slurm_install_prefix }}/bin/backup-slurm-full"
  when: slurm_create_initial_backup | default(true)
  tags: [backup, initial]

- name: "Отображение статуса резервного копирования"
  debug:
    msg: |
      ================================================================
      РЕЗЕРВНОЕ КОПИРОВАНИЕ SLURM НАСТРОЕНО
      ================================================================
      
      Доступные команды:
      - Полное резервное копирование: 
        {{ slurm_install_prefix }}/bin/backup-slurm-full
      - Копирование конфигурации: 
        {{ slurm_install_prefix }}/bin/backup-slurm-config
      - Проверка резервных копий: 
        {{ slurm_install_prefix }}/bin/check-slurm-backups
      
      Расположение: {{ slurm_backup_dir | default('/var/backups/slurm') }}
      ================================================================
  tags: [backup, summary]
