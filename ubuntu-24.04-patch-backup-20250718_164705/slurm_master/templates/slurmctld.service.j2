# =============================================================================
# SLURMCTLD SYSTEMD SERVICE FILE - GENERATED BY ANSIBLE
# =============================================================================
#
# slurmctld.service - Slurm Controller Daemon
# Generated automatically by Ansible - DO NOT EDIT MANUALLY
#
# This service manages the Slurm controller daemon (slurmctld)
# =============================================================================

[Unit]
Description=Slurm Controller Daemon
Documentation=man:slurmctld(8)
After=network.target munge.service{% if slurm_enable_slurmdbd | default(true) %} slurmdbd.service{% endif %}

Wants=network.target
Requires=munge.service{% if slurm_enable_slurmdbd | default(true) %} slurmdbd.service{% endif %}

ConditionPathExists={{ slurm_config_dir }}/slurm.conf
{% if slurm_enable_slurmdbd | default(true) %}
ConditionPathExists={{ slurm_config_dir }}/slurmdbd.conf
{% endif %}

[Service]
Type=forking
EnvironmentFile=-/etc/default/slurmctld
EnvironmentFile=-/etc/sysconfig/slurmctld

# User and group
User={{ slurm_user }}
Group={{ slurm_group | default(slurm_user) }}

# Process and PID management
PIDFile={{ slurm_slurmctld_pid_file }}
ExecStart={{ slurm_install_prefix }}/sbin/slurmctld -D $SLURMCTLD_OPTIONS
ExecReload=/bin/kill -HUP $MAINPID

# Graceful shutdown
KillMode=process
KillSignal=SIGTERM
SendSIGKILL=no
TimeoutStopSec={{ slurm_service_timeout_stop | default('120s') }}

# Resource limits
LimitNOFILE={{ slurm_limit_nofile | default('65536') }}
LimitNPROC={{ slurm_limit_nproc | default('65536') }}
LimitMEMLOCK={{ slurm_limit_memlock | default('infinity') }}
{% if slurm_limit_core is defined %}
LimitCORE={{ slurm_limit_core }}
{% endif %}

# Security settings
# Run with reduced privileges
NoNewPrivileges={{ slurm_no_new_privileges | default('yes') }}

# Filesystem isolation
PrivateTmp={{ slurm_private_tmp | default('yes') }}
ProtectHome={{ slurm_protect_home | default('yes') }}
ProtectSystem={{ slurm_protect_system | default('strict') }}

# Make configuration directories writable
ReadWritePaths={{ slurm_config_dir }}
ReadWritePaths={{ slurm_state_save_location }}
ReadWritePaths={{ slurm_spool_dir }}
ReadWritePaths=/var/log/slurm
{% if slurm_additional_rw_paths is defined %}
{% for path in slurm_additional_rw_paths %}
ReadWritePaths={{ path }}
{% endfor %}
{% endif %}

# Network access
{% if slurm_restrict_network | default(false) %}
PrivateNetwork=no
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
{% endif %}

# System call filtering
{% if slurm_system_call_filter | default(false) %}
SystemCallFilter=@system-service
SystemCallErrorNumber=EPERM
{% endif %}

# Device access restrictions
{% if slurm_restrict_devices | default(false) %}
DevicePolicy=closed
DeviceAllow=/dev/null rw
DeviceAllow=/dev/zero rw
DeviceAllow=/dev/urandom r
{% endif %}

# Memory protection
{% if slurm_memory_deny_write_execute | default(false) %}
MemoryDenyWriteExecute=yes
{% endif %}

# Capability restrictions
{% if slurm_capability_restrictions | default(false) %}
CapabilityBoundingSet=CAP_DAC_OVERRIDE CAP_SETUID CAP_SETGID CAP_SYS_ADMIN
AmbientCapabilities=CAP_DAC_OVERRIDE CAP_SETUID CAP_SETGID CAP_SYS_ADMIN
{% endif %}

# Environment variables
Environment="SLURM_CONF={{ slurm_config_dir }}/slurm.conf"
{% if slurm_environment_vars is defined %}
{% for env_var in slurm_environment_vars %}
Environment="{{ env_var.name }}={{ env_var.value }}"
{% endfor %}
{% endif %}

# Working directory
WorkingDirectory={{ slurm_working_directory | default('/var/lib/slurm') }}

# Standard output/error
StandardOutput={{ slurm_standard_output | default('journal') }}
StandardError={{ slurm_standard_error | default('journal') }}

# Restart behavior
Restart={{ slurm_restart_policy | default('on-failure') }}
RestartSec={{ slurm_restart_sec | default('10s') }}
RestartPreventExitStatus={{ slurm_restart_prevent_exit_status | default('SIGKILL') }}
StartLimitInterval={{ slurm_start_limit_interval | default('10min') }}
StartLimitBurst={{ slurm_start_limit_burst | default('3') }}

# Service management
RemainAfterExit=no
GuessMainPID=no

# Logging
SyslogIdentifier=slurmctld
SyslogLevel={{ slurm_syslog_level | default('info') }}

# Watchdog (optional)
{% if slurm_enable_watchdog | default(false) %}
WatchdogSec={{ slurm_watchdog_sec | default('30s') }}
{% endif %}

# Slice (for resource management)
{% if slurm_systemd_slice is defined %}
Slice={{ slurm_systemd_slice }}
{% endif %}

# CPU and memory accounting
{% if slurm_enable_accounting | default(true) %}
CPUAccounting=yes
MemoryAccounting=yes
BlockIOAccounting=yes
{% endif %}

# Resource quotas (optional)
{% if slurm_cpu_quota is defined %}
CPUQuota={{ slurm_cpu_quota }}
{% endif %}
{% if slurm_memory_limit is defined %}
MemoryLimit={{ slurm_memory_limit }}
{% endif %}

# Priority settings
{% if slurm_nice_level is defined %}
Nice={{ slurm_nice_level }}
{% endif %}
{% if slurm_ionice_class is defined %}
IOSchedulingClass={{ slurm_ionice_class }}
{% endif %}
{% if slurm_ionice_priority is defined %}
IOSchedulingPriority={{ slurm_ionice_priority }}
{% endif %}

# OOM handling
{% if slurm_oom_score_adjust is defined %}
OOMScoreAdjust={{ slurm_oom_score_adjust }}
{% endif %}

[Install]
WantedBy=multi-user.target
Alias=slurmctld.service

# =============================================================================
# END OF SYSTEMD SERVICE CONFIGURATION
# =============================================================================