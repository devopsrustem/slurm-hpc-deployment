# =============================================================================
# SLURM CGROUP CONFIGURATION FILE - GENERATED BY ANSIBLE
# =============================================================================
#
# cgroup.conf - Cgroup Configuration File for Slurm
# Generated automatically by Ansible - DO NOT EDIT MANUALLY
#
# This file defines the cgroup settings for resource isolation and control
# Documentation: https://slurm.schedmd.com/cgroup.conf.html
# =============================================================================

# =============================================================================
# CGROUP BASIC SETTINGS
# =============================================================================

# Cgroup release agent
CgroupReleaseAgentDir="{{ slurm_cgroup_release_agent_dir | default('/etc/slurm/cgroup') }}"

# Automatically mount cgroups if they are not mounted
CgroupAutomount={{ slurm_cgroup_automount | default('yes') }}

# Cgroup mountpoint
{% if slurm_cgroup_mountpoint is defined %}
CgroupMountpoint={{ slurm_cgroup_mountpoint }}
{% endif %}

# =============================================================================
# CGROUP PLUGIN SELECTION
# =============================================================================

# Cgroup plugin to use (cgroup/v1 or cgroup/v2)
CgroupPlugin={{ slurm_cgroup_plugin | default('cgroup/v1') }}

# =============================================================================
# CPU CONSTRAINT SETTINGS
# =============================================================================

# Constrain allowed cores to the ones allocated by Slurm
ConstrainCores={{ slurm_constrain_cores | default('yes') }}

# Use the assigned CPUs in the cgroup
AllowedCoresFile="{{ slurm_allowed_cores_file | default('list') }}"

# Task affinity - bind tasks to specific cores
TaskAffinity={{ slurm_task_affinity | default('yes') }}

# =============================================================================
# MEMORY CONSTRAINT SETTINGS
# =============================================================================

# Constrain RAM usage to allocated memory
ConstrainRAMSpace={{ slurm_constrain_ram_space | default('yes') }}

# What to do when a job exceeds memory limits
# Options: no, yes, kill, oom-kill
ConstrainKmemSpace={{ slurm_constrain_kmem_space | default('no') }}

# Memory limit enforcement
MemoryLimitEnforcement={{ slurm_memory_limit_enforcement | default('yes') }}

# Maximum allowed memory for system processes
MaxRAMPercent={{ slurm_max_ram_percent | default('100') }}

# Maximum swap usage allowed
MaxSwapPercent={{ slurm_max_swap_percent | default('0') }}

# Memory usage threshold for oom-killer (0-100)
MemorySwappiness={{ slurm_memory_swappiness | default('1') }}

# =============================================================================
# SWAP CONSTRAINT SETTINGS
# =============================================================================

# Constrain swap usage
ConstrainSwapSpace={{ slurm_constrain_swap_space | default('yes') }}

# =============================================================================
# DEVICE CONSTRAINT SETTINGS
# =============================================================================

# Constrain access to devices
ConstrainDevices={{ slurm_constrain_devices | default('yes') }}

# Allowed devices for all jobs
AllowedDevicesFile="{{ slurm_allowed_devices_file | default('/etc/slurm/cgroup_allowed_devices_file.conf') }}"

# =============================================================================
# ADVANCED CPU SETTINGS
# =============================================================================

# CPU time limits
CPUAccounting={{ slurm_cpu_accounting | default('yes') }}

# CPU quota enforcement
ConstrainCPUTime={{ slurm_constrain_cpu_time | default('no') }}

# CPU frequency scaling
{% if slurm_cpu_freq_def is defined %}
CpuFreqDef={{ slurm_cpu_freq_def }}
{% endif %}

# CPU frequency governors
{% if slurm_cpu_freq_govs is defined %}
CpuFreqGovs={{ slurm_cpu_freq_govs }}
{% endif %}

# =============================================================================
# CGROUP HIERARCHY SETTINGS
# =============================================================================

# Cgroup hierarchy for different resource types
{% if slurm_cgroup_plugin == 'cgroup/v2' %}
# Cgroup v2 unified hierarchy settings
CgroupSubsystems="{{ slurm_cgroup_subsystems | default('memory,cpu,devices,cpuset') }}"
{% else %}
# Cgroup v1 legacy hierarchy settings
CgroupSubsystems="{{ slurm_cgroup_subsystems | default('memory,cpu,devices,cpuset,blkio') }}"
{% endif %}

# =============================================================================
# STEP-SPECIFIC SETTINGS
# =============================================================================

# Enable step-level cgroups for finer control
{% if slurm_enable_step_cgroups | default(true) %}
EnableStepCgroups={{ slurm_enable_step_cgroups }}
{% endif %}

# =============================================================================
# HPC-SPECIFIC OPTIMIZATIONS
# =============================================================================

{% if slurm_hpc_optimizations | default(true) %}
# HPC workload optimizations

# Disable CPU throttling for HPC workloads
AllowedCpusFile="{{ slurm_allowed_cpus_file | default('') }}"

# Memory overcommit handling for large jobs
{% if slurm_memory_overcommit is defined %}
MemoryLimitThreshold={{ slurm_memory_overcommit }}
{% endif %}

# NUMA topology awareness
{% if slurm_numa_awareness | default(true) %}
ConstrainNumaNodes={{ slurm_constrain_numa_nodes | default('yes') }}
{% endif %}

{% endif %}

# =============================================================================
# CONTAINER SUPPORT (ENROOT/PYXIS)
# =============================================================================

{% if slurm_enable_containers | default(false) %}
# Container runtime support
# These settings work with Enroot/Pyxis for container jobs

# Allow container runtimes to manage devices
AllowContainerDevices={{ slurm_allow_container_devices | default('yes') }}

# Container-specific device isolation
{% if slurm_container_devices is defined %}
ContainerDevices="{{ slurm_container_devices }}"
{% endif %}

{% endif %}

# =============================================================================
# GPU CGROUP SETTINGS
# =============================================================================

{% if slurm_enable_gpu_cgroups | default(true) %}
# GPU resource isolation
# These settings work with NVIDIA GPUs and CUDA

# GPU memory constraint
ConstrainGPUMemory={{ slurm_constrain_gpu_memory | default('yes') }}

# GPU device access control  
ConstrainGPUDevices={{ slurm_constrain_gpu_devices | default('yes') }}

# NVIDIA device handling
{% if slurm_nvidia_device_files is defined %}
NvidiaDeviceFiles="{{ slurm_nvidia_device_files }}"
{% endif %}

{% endif %}

# =============================================================================
# BLOCK I/O SETTINGS
# =============================================================================

{% if slurm_enable_blkio_cgroups | default(false) %}
# Block I/O throttling and accounting
BlkioAccounting={{ slurm_blkio_accounting | default('yes') }}

# I/O bandwidth limits
{% if slurm_blkio_weight is defined %}
BlkioWeight={{ slurm_blkio_weight }}
{% endif %}

{% endif %}

# =============================================================================
# NETWORK CONSTRAINTS
# =============================================================================

{% if slurm_enable_network_cgroups | default(false) %}
# Network bandwidth control (requires tc and cgroup net_cls)
ConstrainNetworkBandwidth={{ slurm_constrain_network_bandwidth | default('no') }}

{% endif %}

# =============================================================================
# DEBUGGING AND MONITORING
# =============================================================================

{% if slurm_cgroup_debug | default(false) %}
# Debug logging for cgroup operations
CgroupDebug={{ slurm_cgroup_debug_level | default('error') }}

# Log cgroup creation/destruction
LogCgroupOps={{ slurm_log_cgroup_ops | default('no') }}

{% endif %}

# =============================================================================
# SYSTEM-SPECIFIC TUNING
# =============================================================================

{% if slurm_system_cgroup_tuning is defined %}
{% for tuning in slurm_system_cgroup_tuning %}
# {{ tuning.description }}
{{ tuning.parameter }}={{ tuning.value }}
{% endfor %}
{% endif %}

# =============================================================================
# TROUBLESHOOTING SETTINGS
# =============================================================================

{% if slurm_cgroup_troubleshooting | default(false) %}
# Settings for troubleshooting cgroup issues

# Ignore cgroup mount errors
IgnoreCgroupMountErrors={{ slurm_ignore_cgroup_mount_errors | default('no') }}

# Skip cgroup cleanup on job termination
SkipCgroupCleanup={{ slurm_skip_cgroup_cleanup | default('no') }}

{% endif %}

# =============================================================================
# END OF CGROUP CONFIGURATION
# =============================================================================