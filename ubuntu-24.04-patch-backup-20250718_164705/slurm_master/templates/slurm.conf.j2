# =============================================================================
# SLURM CONFIGURATION FILE - GENERATED BY ANSIBLE
# =============================================================================
# 
# slurm.conf - Slurm 25.05.1 Configuration File
# Generated automatically by Ansible - DO NOT EDIT MANUALLY
#
# Documentation: https://slurm.schedmd.com/slurm.conf.html
# =============================================================================

# CONTROL MACHINES
ControlMachine={{ slurm_master_node }}
{% if slurm_backup_controller is defined and slurm_backup_controller %}
BackupController={{ slurm_backup_controller }}
{% endif %}

# CONTROL ADDRESSES  
ControlAddr={{ slurm_master_address }}
{% if slurm_backup_address is defined and slurm_backup_address %}
BackupAddr={{ slurm_backup_address }}
{% endif %}

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================
ClusterName={{ slurm_cluster_name }}
SlurmUser={{ slurm_user }}
SlurmdUser=root
SlurmctldPort={{ slurm_slurmctld_port }}
SlurmdPort={{ slurm_slurmd_port }}

# AUTHENTICATION
AuthType=auth/munge
{% if slurm_enable_jwt_auth | default(false) %}
AuthInfo=cred_type=jwt
AuthAltTypes=auth/jwt
AuthAltParameters=jwt_key={{ slurm_jwt_key_file }}
{% endif %}

# NETWORK COMMUNICATION
MessageTimeout={{ slurm_message_timeout | default(10) }}
TCPTimeout={{ slurm_tcp_timeout | default(2) }}
InactiveLimit={{ slurm_inactive_limit | default(0) }}
MinJobAge={{ slurm_min_job_age | default(300) }}
KillWait={{ slurm_kill_wait | default(30) }}
Waittime={{ slurm_wait_time | default(0) }}

# =============================================================================
# DIRECTORIES AND FILES
# =============================================================================
StateSaveLocation={{ slurm_state_save_location }}
SlurmdSpoolDir={{ slurm_spool_dir }}
SlurmctldPidFile={{ slurm_slurmctld_pid_file }}
SlurmdPidFile={{ slurm_slurmd_pid_file }}

# LOGGING
SlurmctldLogFile={{ slurm_slurmctld_log_file }}
SlurmdLogFile={{ slurm_slurmd_log_file }}
SlurmctldDebug={{ slurm_slurmctld_debug_level | default(3) }}
SlurmdDebug={{ slurm_slurmd_debug_level | default(3) }}

# =============================================================================
# DATABASE CONFIGURATION (SLURMDBD)
# =============================================================================
{% if slurm_enable_slurmdbd | default(true) %}
AccountingStorageType=accounting_storage/slurmdbd
AccountingStorageHost={{ slurm_master_node }}
AccountingStoragePort={{ slurm_slurmdbd_port }}
AccountingStorageUser={{ slurm_db_user }}
{% else %}
AccountingStorageType=accounting_storage/none
{% endif %}

# JOB ACCOUNTING
JobAcctGatherType=jobacct_gather/linux
JobAcctGatherFrequency={{ slurm_job_acct_gather_frequency | default(30) }}

# =============================================================================
# PROCESS TRACKING AND ISOLATION
# =============================================================================
ProctrackType=proctrack/cgroup
TaskPlugin=task/cgroup

# CGROUP CONFIGURATION
{% if slurm_enable_cgroups | default(true) %}
CgroupAutomount=yes
CgroupMountpoint={{ slurm_cgroup_mountpoint | default('/sys/fs/cgroup') }}
ConstrainCores=yes
ConstrainRAMSpace=yes
ConstrainSwapSpace=yes
ConstrainDevices=yes
{% endif %}

# =============================================================================
# SCHEDULING
# =============================================================================
SchedulerType=sched/backfill
SchedulerParameters={{ slurm_scheduler_parameters | default('default_queue_depth=100,max_rpc_cnt=0,partition_job_depth=0') }}
SelectType=select/cons_tres
SelectTypeParameters={{ slurm_select_type_parameters | default('CR_Core_Memory') }}

# PRIORITY
PriorityType=priority/multifactor
PriorityDecayHalfLife={{ slurm_priority_decay_half_life | default('1-0') }}
PriorityFavorSmall=NO
PriorityMaxAge={{ slurm_priority_max_age | default('7-0') }}
PriorityUsageResetPeriod={{ slurm_priority_usage_reset_period | default('NONE') }}
PriorityWeightAge={{ slurm_priority_weight_age | default(1000) }}
PriorityWeightFairshare={{ slurm_priority_weight_fairshare | default(1000) }}
PriorityWeightJobSize={{ slurm_priority_weight_job_size | default(1000) }}
PriorityWeightPartition={{ slurm_priority_weight_partition | default(1000) }}
PriorityWeightQOS={{ slurm_priority_weight_qos | default(1000) }}

# =============================================================================
# RESOURCE LIMITS
# =============================================================================
MaxJobCount={{ slurm_max_job_count | default(50000) }}
MaxArraySize={{ slurm_max_array_size | default(1000) }}
MaxJobId={{ slurm_max_job_id | default(67043328) }}
MaxMemPerCPU={{ slurm_max_mem_per_cpu | default(0) }}
DefMemPerCPU={{ slurm_def_mem_per_cpu | default(0) }}

# =============================================================================
# NODE HEALTH AND MONITORING  
# =============================================================================
{% if slurm_enable_node_health_check | default(true) %}
HealthCheckProgram={{ slurm_health_check_program | default('/usr/sbin/nhc') }}
HealthCheckInterval={{ slurm_health_check_interval | default(600) }}
HealthCheckNodeState={{ slurm_health_check_node_state | default('ANY') }}
{% endif %}

ReturnToService={{ slurm_return_to_service | default(1) }}
SlurmdTimeout={{ slurm_slurmd_timeout | default(300) }}
SlurmctldTimeout={{ slurm_slurmctld_timeout | default(120) }}
BatchStartTimeout={{ slurm_batch_start_timeout | default(10) }}
CompleteWait={{ slurm_complete_wait | default(0) }}
EpilogMsgTime={{ slurm_epilog_msg_time | default(2000) }}
GetEnvTimeout={{ slurm_get_env_timeout | default(2) }}
InactiveLimit={{ slurm_inactive_limit | default(0) }}
KillOnBadExit={{ slurm_kill_on_bad_exit | default(0) }}
MessageTimeout={{ slurm_message_timeout | default(10) }}
ResvOverRun={{ slurm_resv_over_run | default(0) }}
MinJobAge={{ slurm_min_job_age | default(300) }}
OverTimeLimit={{ slurm_over_time_limit | default(0) }}
UnkillableStepTimeout={{ slurm_unkillable_step_timeout | default(60) }}
VSizeFactor={{ slurm_vsize_factor | default(0) }}
Waittime={{ slurm_wait_time | default(0) }}

# =============================================================================
# GPU AND GRES CONFIGURATION
# =============================================================================
{% if slurm_enable_gres | default(true) %}
GresTypes={{ slurm_gres_types | default('gpu') }}
{% endif %}

# =============================================================================
# PLUGINS
# =============================================================================
# MPI Plugin
MpiDefault={{ slurm_mpi_default | default('pmix') }}

# Communication layer
SwitchType=switch/none

# Topology plugin for network topology
{% if slurm_topology_plugin is defined %}
TopologyPlugin={{ slurm_topology_plugin }}
{% endif %}

# Power management
{% if slurm_power_plugin is defined %}
PowerPlugin={{ slurm_power_plugin }}
PowerParameters={{ slurm_power_parameters | default('') }}
{% endif %}

# Burst buffer plugin
{% if slurm_burst_buffer_plugin is defined %}
BurstBufferType={{ slurm_burst_buffer_plugin }}
{% endif %}

# =============================================================================
# PREEMPTION
# =============================================================================
PreemptMode={{ slurm_preempt_mode | default('OFF') }}
PreemptType={{ slurm_preempt_type | default('preempt/none') }}

# =============================================================================
# EPILOG AND PROLOG SCRIPTS
# =============================================================================
{% if slurm_prolog_script is defined and slurm_prolog_script %}
Prolog={{ slurm_prolog_script }}
{% endif %}
{% if slurm_epilog_script is defined and slurm_epilog_script %}
Epilog={{ slurm_epilog_script }}
{% endif %}
{% if slurm_task_prolog is defined and slurm_task_prolog %}
TaskProlog={{ slurm_task_prolog }}
{% endif %}
{% if slurm_task_epilog is defined and slurm_task_epilog %}
TaskEpilog={{ slurm_task_epilog }}
{% endif %}

# =============================================================================
# SLURM REST API
# =============================================================================
{% if slurm_enable_rest_api | default(false) %}
# REST API configuration handled by slurmrestd service
{% endif %}

# =============================================================================
# FEDERATION SUPPORT
# =============================================================================
{% if slurm_federation_name is defined %}
FederationParameters=fed_display
{% endif %}

# =============================================================================
# MAIL CONFIGURATION
# =============================================================================
{% if slurm_mail_prog is defined %}
MailProg={{ slurm_mail_prog }}
{% endif %}

# =============================================================================
# COMPUTE NODES DEFINITION
# =============================================================================
{% for node_group in slurm_node_groups %}
# {{ node_group.name | upper }} NODE GROUP
{% if node_group.gres is defined %}
NodeName={{ node_group.nodes }} CPUs={{ node_group.cpus }} Sockets={{ node_group.sockets }} CoresPerSocket={{ node_group.cores_per_socket }} ThreadsPerCore={{ node_group.threads_per_core }} RealMemory={{ node_group.memory }} Gres={{ node_group.gres }} State={{ node_group.state | default('UNKNOWN') }}
{% else %}
NodeName={{ node_group.nodes }} CPUs={{ node_group.cpus }} Sockets={{ node_group.sockets }} CoresPerSocket={{ node_group.cores_per_socket }} ThreadsPerCore={{ node_group.threads_per_core }} RealMemory={{ node_group.memory }} State={{ node_group.state | default('UNKNOWN') }}
{% endif %}
{% endfor %}

# =============================================================================
# PARTITIONS DEFINITION
# =============================================================================
{% for partition in slurm_partitions %}
# {{ partition.name | upper }} PARTITION
PartitionName={{ partition.name }} Nodes={{ partition.nodes }} Default={{ partition.default | default('NO') }} MaxTime={{ partition.max_time | default('UNLIMITED') }} State={{ partition.state | default('UP') }}
{%- if partition.allow_groups is defined %} AllowGroups={{ partition.allow_groups }}{% endif %}
{%- if partition.allow_accounts is defined %} AllowAccounts={{ partition.allow_accounts }}{% endif %}
{%- if partition.deny_groups is defined %} DenyGroups={{ partition.deny_groups }}{% endif %}
{%- if partition.deny_accounts is defined %} DenyAccounts={{ partition.deny_accounts }}{% endif %}
{%- if partition.priority_tier is defined %} PriorityTier={{ partition.priority_tier }}{% endif %}
{%- if partition.priority_job_factor is defined %} PriorityJobFactor={{ partition.priority_job_factor }}{% endif %}
{%- if partition.max_nodes is defined %} MaxNodes={{ partition.max_nodes }}{% endif %}
{%- if partition.min_nodes is defined %} MinNodes={{ partition.min_nodes }}{% endif %}
{%- if partition.default_time is defined %} DefaultTime={{ partition.default_time }}{% endif %}
{%- if partition.max_cpus_per_node is defined %} MaxCPUsPerNode={{ partition.max_cpus_per_node }}{% endif %}
{%- if partition.max_mem_per_cpu is defined %} MaxMemPerCPU={{ partition.max_mem_per_cpu }}{% endif %}
{%- if partition.max_mem_per_node is defined %} MaxMemPerNode={{ partition.max_mem_per_node }}{% endif %}
{%- if partition.suspend_time is defined %} SuspendTime={{ partition.suspend_time }}{% endif %}
{%- if partition.resume_timeout is defined %} ResumeTimeout={{ partition.resume_timeout }}{% endif %}
{%- if partition.suspend_timeout is defined %} SuspendTimeout={{ partition.suspend_timeout }}{% endif %}

{% endfor %}

# =============================================================================
# INCLUDES
# =============================================================================
{% if slurm_enable_gres | default(true) %}
include {{ slurm_config_dir }}/gres.conf
{% endif %}
{% if slurm_enable_cgroups | default(true) %}
include {{ slurm_config_dir }}/cgroup.conf
{% endif %}
{% if slurm_topology_file is defined %}
include {{ slurm_topology_file }}
{% endif %}

# =============================================================================
# END OF CONFIGURATION
# =============================================================================