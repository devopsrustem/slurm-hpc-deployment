{
  "_comment": "SLURM JWT Key Set - Generated by Ansible",
  "_generated": "{{ ansible_date_time.iso8601 }}",
  "_version": "{{ slurm_version | default('25.05.1') }}",
  "_cluster": "{{ slurm_cluster_name }}",
  
  "keys": [
    {
      "kty": "{{ slurm_jwt_key_type | default('oct') }}",
      "alg": "{{ slurm_jwt_algorithm | default('HS256') }}",
      "use": "sig",
      "kid": "{{ slurm_jwt_key_id | default('slurm-cluster-key') }}",
      "k": "{{ slurm_jwt_secret_key | b64encode }}",
      "key_ops": [
        "sign",
        "verify"
      ],
      "_metadata": {
        "description": "Primary Slurm cluster signing key",
        "created": "{{ ansible_date_time.iso8601 }}",
        "cluster": "{{ slurm_cluster_name }}",
        "expires": "{{ slurm_jwt_key_expiry | default('never') }}"
      }
    }{% if slurm_jwt_backup_keys is defined %},
{% for backup_key in slurm_jwt_backup_keys %}
    {
      "kty": "{{ backup_key.type | default('oct') }}",
      "alg": "{{ backup_key.algorithm | default('HS256') }}",
      "use": "sig",
      "kid": "{{ backup_key.id }}",
      "k": "{{ backup_key.secret | b64encode }}",
      "key_ops": [
        "sign",
        "verify"
      ],
      "_metadata": {
        "description": "{{ backup_key.description | default('Backup Slurm signing key') }}",
        "created": "{{ backup_key.created | default(ansible_date_time.iso8601) }}",
        "cluster": "{{ slurm_cluster_name }}",
        "expires": "{{ backup_key.expires | default('never') }}"
      }
    }{% if not loop.last %},{% endif %}
{% endfor %}
{% endif %}

  ],
  
  "_config": {
    "issuer": "{{ slurm_jwt_issuer | default('slurm-cluster-' + slurm_cluster_name) }}",
    "audience": "{{ slurm_jwt_audience | default('slurm-users') }}",
    "default_algorithm": "{{ slurm_jwt_algorithm | default('HS256') }}",
    "token_lifetime": "{{ slurm_jwt_token_lifetime | default('3600') }}",
    "refresh_lifetime": "{{ slurm_jwt_refresh_lifetime | default('86400') }}",
    "clock_skew_tolerance": "{{ slurm_jwt_clock_skew | default('300') }}",
    
    "_security": {
      "key_rotation_policy": "{{ slurm_jwt_key_rotation_policy | default('monthly') }}",
      "minimum_key_length": "{{ slurm_jwt_min_key_length | default('256') }}",
      "require_https": "{{ slurm_jwt_require_https | default('true') }}",
      "validate_issuer": "{{ slurm_jwt_validate_issuer | default('true') }}",
      "validate_audience": "{{ slurm_jwt_validate_audience | default('true') }}",
      "validate_expiration": "{{ slurm_jwt_validate_expiration | default('true') }}"
    },
    
    "_endpoints": {
      "token_endpoint": "{{ slurm_jwt_token_endpoint | default('https://' + slurm_master_node + ':' + (slurm_slurmrestd_port | string) + '/slurm/v0.0.41/token') }}",
      "userinfo_endpoint": "{{ slurm_jwt_userinfo_endpoint | default('https://' + slurm_master_node + ':' + (slurm_slurmrestd_port | string) + '/slurm/v0.0.41/userinfo') }}",
      "jwks_uri": "{{ slurm_jwt_jwks_uri | default('https://' + slurm_master_node + ':' + (slurm_slurmrestd_port | string) + '/.well-known/jwks.json') }}"
    },
    
    "_permissions": {
      "default_scope": "{{ slurm_jwt_default_scope | default('slurm:read slurm:write') }}",
      "admin_scope": "{{ slurm_jwt_admin_scope | default('slurm:admin') }}",
      "readonly_scope": "{{ slurm_jwt_readonly_scope | default('slurm:read') }}"
    }
  },
  
  "_validation": {
    "required_claims": {{ slurm_jwt_required_claims | default(['sub', 'iat', 'exp', 'aud', 'iss']) | to_json }},
    "optional_claims": {{ slurm_jwt_optional_claims | default(['name', 'email', 'groups', 'roles']) | to_json }},
    "custom_claims": {{ slurm_jwt_custom_claims | default({}) | to_json }}
  },
  
  "_integration": {
    "slurm_version": "{{ slurm_version | default('25.05.1') }}",
    "slurmrestd_version": "{{ slurm_slurmrestd_version | default('25.05.1') }}",
    "auth_plugins": {{ slurm_auth_plugins | default(['auth/jwt', 'auth/munge']) | to_json }},
    "supported_algorithms": {{ slurm_jwt_supported_algorithms | default(['HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512']) | to_json }}
  },
  
  "_management": {
    "key_file_permissions": "{{ slurm_jwt_key_file_permissions | default('0600') }}",
    "key_file_owner": "{{ slurm_user }}",
    "key_file_group": "{{ slurm_group | default(slurm_user) }}",
    "backup_policy": "{{ slurm_jwt_backup_policy | default('daily') }}",
    "rotation_schedule": "{{ slurm_jwt_rotation_schedule | default('0 2 1 * *') }}",
    
    "_monitoring": {
      "log_successful_authentications": "{{ slurm_jwt_log_success | default('false') }}",
      "log_failed_authentications": "{{ slurm_jwt_log_failures | default('true') }}",
      "alert_on_key_rotation": "{{ slurm_jwt_alert_rotation | default('true') }}",
      "metrics_endpoint": "{{ slurm_jwt_metrics_endpoint | default('') }}"
    }
  },
  
  "_compatibility": {
    "legacy_token_support": "{{ slurm_jwt_legacy_support | default('false') }}",
    "migration_mode": "{{ slurm_jwt_migration_mode | default('false') }}",
    "fallback_to_munge": "{{ slurm_jwt_fallback_munge | default('true') }}",
    "strict_validation": "{{ slurm_jwt_strict_validation | default('true') }}"
  }
}